// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// MockAuthMiddleware is an autogenerated mock type for the AuthMiddleware type
type MockAuthMiddleware struct {
	mock.Mock
}

type MockAuthMiddleware_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuthMiddleware) EXPECT() *MockAuthMiddleware_Expecter {
	return &MockAuthMiddleware_Expecter{mock: &_m.Mock}
}

// Bearer provides a mock function with given fields: next
func (_m *MockAuthMiddleware) Bearer(next echo.HandlerFunc) echo.HandlerFunc {
	ret := _m.Called(next)

	if len(ret) == 0 {
		panic("no return value specified for Bearer")
	}

	var r0 echo.HandlerFunc
	if rf, ok := ret.Get(0).(func(echo.HandlerFunc) echo.HandlerFunc); ok {
		r0 = rf(next)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.HandlerFunc)
		}
	}

	return r0
}

// MockAuthMiddleware_Bearer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Bearer'
type MockAuthMiddleware_Bearer_Call struct {
	*mock.Call
}

// Bearer is a helper method to define mock.On call
//   - next echo.HandlerFunc
func (_e *MockAuthMiddleware_Expecter) Bearer(next interface{}) *MockAuthMiddleware_Bearer_Call {
	return &MockAuthMiddleware_Bearer_Call{Call: _e.mock.On("Bearer", next)}
}

func (_c *MockAuthMiddleware_Bearer_Call) Run(run func(next echo.HandlerFunc)) *MockAuthMiddleware_Bearer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(echo.HandlerFunc))
	})
	return _c
}

func (_c *MockAuthMiddleware_Bearer_Call) Return(_a0 echo.HandlerFunc) *MockAuthMiddleware_Bearer_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAuthMiddleware_Bearer_Call) RunAndReturn(run func(echo.HandlerFunc) echo.HandlerFunc) *MockAuthMiddleware_Bearer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAuthMiddleware creates a new instance of MockAuthMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAuthMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAuthMiddleware {
	mock := &MockAuthMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
